#include <iostream>
using namespace std;

class node {
public:
    int val;
    node* next;
    node(int data) {
        val = data;
        next = NULL;
    }
};

class linkedlist {
public:
    node* head;
    linkedlist() {
        head = NULL;
    }
    void insertattail(int value) {
        node* new_node = new node(value);
        if (head == NULL) {
            head = new_node;
            return;
        }
        node* temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = new_node;
    }
    void display() {
        node* temp = head;
        while (temp != NULL) {
            cout << temp->val << " -> ";
            temp = temp->next;
        }
        cout << "NULL" << endl;
    }
    
    node* findMiddle(node*& head) {
        node* slow = head;
        node* fast = head; 
        while (fast != NULL && fast->next!=NULL) { //handling even and odd cases respectively
            slow = slow->next;
            fast = fast->next->next;
        }
        return slow;
     }

};

int main()
{
    linkedlist ll;
    for (int i = 0; i < 6; i++) {
        int a;
        cin >> a;
        ll.insertattail(a);
    }
    ll.display();

    node* middlenode = ll.findMiddle(ll.head);
    cout << middlenode->val << endl;

    return 0;
}
