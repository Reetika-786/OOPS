#include <iostream>
using namespace std;

class node {
public:
  int val;
  node *next;
  node(int data) {
    val = data;
    next = NULL;
  }
};

class linkedlist {
public:
  node *head;

  linkedlist() {
    head = NULL;
  }

  void insertattail(int value) {
    node *new_node = new node(value);
    if (head == NULL) {
      head = new_node;
      return;
    }
    node *temp = head;
    while (temp->next != NULL) {
      temp = temp->next;
    }
    temp->next = new_node;
  }

  void display() {
    node *temp = head;
    while (temp != NULL) {
      cout << temp->val << " -> ";
      temp = temp->next;
    }
    cout << "NULL" << endl;
  }

  node* reversell(node *&head) {
    node *prevptr = NULL;
    node *currptr = head;
    while (currptr != NULL) {
      node *nextptr = currptr->next;
      currptr->next = prevptr;
      prevptr = currptr;
      currptr = nextptr;
    }
    node *new_head = prevptr;
    return new_head;
  }
};

int main() {
  linkedlist ll;
  for (int i = 0; i < 6; i++) {
    int a;
    cin >> a;
    ll.insertattail(a);
  }
  ll.display();
  ll.head = ll.reversell(ll.head);
  ll.display();
  return 0;
}
